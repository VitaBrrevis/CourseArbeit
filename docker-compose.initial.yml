version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile-php
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    command: php artisan serve --host=0.0.0.0 --port=8000  # Ensure Laravel runs on port 8000
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app_network

  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./storage:/var/www/storage
    depends_on:
      - app
    networks:
      - app_network

  mysql:
    build:
      context: .
      dockerfile: Dockerfile-mysql
    container_name: laravel_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  node:
    image: node:20
    container_name: laravel_node
    volumes:
      - ./:/var/www
    working_dir: /var/www
    command: bash -c "npm install && npm run dev"

networks:
  app_network:
    driver: bridge

volumes:
  mysql_data:
